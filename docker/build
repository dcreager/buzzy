#!/bin/sh

# Usage:
#   $ build [distro]
#
# This script builds a Docker image for some Linux distro that we want to build
# a native package for.  The distro must be the name of a directory in
# docker/distros, which should contain a Dockerfile.  That Dockerfile should
# build a Docker image with all of the necessary build tools installed, and with
# a sudo-capable user named `buzzy` that we can use to perform the build.

DISTRO=$1 && shift
if [ -z "$DISTRO" ]; then
    echo "Missing DISTRO"
    exit 1
fi

SCRIPT=`python -c "import os; print(os.path.realpath('$0'))"`
SCRIPT_DIR=`dirname "$SCRIPT"`
PROJECT_DIR=`dirname "$SCRIPT_DIR"`

BUILD_IMAGE=buzzy/build-$DISTRO

OLD_IMAGE_ID=`docker images -q $BUILD_IMAGE`
docker pull $BUILD_IMAGE
if [ -n "$OLD_IMAGE_ID" ]; then
    NEW_IMAGE_ID=`docker images -q $BUILD_IMAGE`
    if [ "$OLD_IMAGE_ID" != "$NEW_IMAGE_ID" ]; then
        docker rmi "$OLD_IMAGE_ID"
    fi
fi

docker run \
    --rm \
    -v "$PROJECT_DIR:/outside" \
    -e DISTRO="$DISTRO" \
    -e UID=`id -u` \
    -e GID=`id -g` \
    "$BUILD_IMAGE" \
    /outside/docker/build-inside
